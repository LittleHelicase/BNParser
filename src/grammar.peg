
line
  = definition / term

term "term"
  = head:node _ op:operators _ tail:term { return  [op, head, tail] } / node

termTail
  = _ op:operators _ n:node { return [op, n] }

node
  = "(" t:term ")" { return t } / word

definition "definition"
  = _ w:word _ "=" _ a1:Integer _ "->" _ a2:Integer _ { return ["def", w, [a1,a2]] }

operators =
  ("++" / "°") { switch(text()){
    case "++": return "parallel"
    case "°": return "sequential"
  }
}

Integer "integer"
  = [0-9]+ { return parseInt(text(), 10); }

word "word"
  = w:char+ { return w.join('') }

char "character"
  = [a-z]

_ "whitespace" = [ \t\n\r]* { return null }
